blueprint:
  name: gocontrol scene switch
  description: Automation blueprint for many z-wave switches with up/down button
    and multiple key presses. Designed with Inovelli LNSW31 and Zooz ZEN34 mappings in mind.
  domain: automation
  input:
    node_name:
      name: Name of the zwavejs entity
      description: Enter the name configured to the device in zwavejs
    button_a:
      name: Button A - Up/On press 1x
      description: Action to run, when the button is pressed one time.
      default: []
      selector:
        action: {}
    button_b:
      name: Button B - Down/Off press 1x
      description: Action to run, when the button is pressed one time.
      default: []
      selector:
        action: {}
    button_a_held:
      name: Button A - Up/On held down
      description: Action to run, when the button is held down.
      default: []
      selector:
        action: {}
    button_b_held:
      name: Button B - Down/Off held down
      description: Action to run, when the button is held down.
      default: []
      selector:
        action: {}
    button_a_released:
      name: Button A - Up/On released
      description: Action to run, when the button is released.
      default: []
      selector:
        action: {}
    button_b_released:
      name: Button B - Down/Off released
      description: Action to run, when the button is released.
      default: []
      selector:
        action: {}
mode: single
max_exceeded: silent
variables:
  node_name: !input 'node_name'
trigger:
- platform: event
  event_type: state_changed
condition: '{{ node_name in trigger.event.data.new_state.attributes.friendly_name }}'
action:
- variables:
    scene_id: '{{ (trigger.event.data.new_state.attributes.propertyKey | int) }}'
    state_value_id: '{{ trigger.event.data.new_state.state }}'
- choose:
  - conditions: '{{ scene_id == 1 and state_value_id == 0 }}'
    sequence: !input 'button_a'
  - conditions: '{{ scene_id == 2 and state_value_id == 0 }}'
    sequence: !input 'button_b'
  - conditions: '{{ scene_id == 1 and state_value_id == 1 }}'
    sequence: !input 'button_a_released'
  - conditions: '{{ scene_id == 2 and state_value_id == 1 }}'
    sequence: !input 'button_b_released'
  - conditions: '{{ scene_id == 1 and state_value_id == 2 }}'
    sequence: !input 'button_a_held'
  - conditions: '{{ scene_id == 2 and state_value_id == 2 }}'
    sequence: !input 'button_b_held'
